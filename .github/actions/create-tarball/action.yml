name: 'Create Source Tarball'
description: 'Creates a source tarball for RPM packaging'
inputs:
  package-name:
    description: 'Name of the package'
    required: true
    default: 'phonehome'
  version:
    description: 'Version of the package'
    required: true
outputs:
  tarball-name:
    description: 'Name of the created tarball'
    value: ${{ steps.create.outputs.tarball-name }}
  tarball-path:
    description: 'Path to the created tarball'
    value: ${{ steps.create.outputs.tarball-path }}
runs:
  using: 'composite'
  steps:
    - name: Create source tarball
      id: create
      shell: bash
      run: |
        set -e
        
        PACKAGE_NAME="${{ inputs.package-name }}"
        VERSION="${{ inputs.version }}"
        TARBALL_NAME="${PACKAGE_NAME}-${VERSION}.tar.gz"
        
        # Colors for output
        GREEN='\033[0;32m'
        BLUE='\033[0;34m'
        NC='\033[0m' # No Color
        
        print_info() {
            echo -e "${BLUE}[INFO]${NC} $1"
        }
        
        print_success() {
            echo -e "${GREEN}[SUCCESS]${NC} $1"
        }
        
        # Check if we're in the right directory
        if [[ ! -f "Cargo.toml" ]] || [[ ! -f "src/main.rs" ]]; then
            echo "Error: Please run this action from the phonehome project directory"
            exit 1
        fi
        
        print_info "Creating source tarball for ${PACKAGE_NAME} v${VERSION}..."
        
        # Create temporary directory
        TEMP_DIR=$(mktemp -d)
        SOURCE_DIR="${TEMP_DIR}/${PACKAGE_NAME}-${VERSION}"
        
        print_info "Copying source files to ${SOURCE_DIR}..."
        
        # Create source directory structure
        mkdir -p "${SOURCE_DIR}"
        
        # Copy essential files for building
        cp -r src/ "${SOURCE_DIR}/"
        cp -r etc/ "${SOURCE_DIR}/"
        cp -r usr/ "${SOURCE_DIR}/"
        cp -r tests/ "${SOURCE_DIR}/"
        cp -r examples/ "${SOURCE_DIR}/"
        cp Cargo.toml "${SOURCE_DIR}/"
        cp Cargo.lock "${SOURCE_DIR}/" 2>/dev/null || echo "Note: Cargo.lock not found, will be generated during build"
        cp LICENSE "${SOURCE_DIR}/"
        cp README.md "${SOURCE_DIR}/"
        cp phonehome.spec "${SOURCE_DIR}/"
        
        # Create the tarball
        print_info "Creating tarball ${TARBALL_NAME}..."
        cd "${TEMP_DIR}"
        tar -czf "${TARBALL_NAME}" "${PACKAGE_NAME}-${VERSION}/"
        
        # Move tarball to current directory
        mv "${TARBALL_NAME}" "${GITHUB_WORKSPACE}/"
        
        # Cleanup
        rm -rf "${TEMP_DIR}"
        
        print_success "Tarball created: ${TARBALL_NAME}"
        print_info "Ready for upload!"
        
        # Set outputs
        echo "tarball-name=${TARBALL_NAME}" >> $GITHUB_OUTPUT
        echo "tarball-path=${GITHUB_WORKSPACE}/${TARBALL_NAME}" >> $GITHUB_OUTPUT