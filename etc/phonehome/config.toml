# PhoneHome Server Configuration
# This is an example configuration file for the phonehome application.
# Copy this file to config.toml and modify the values according to your setup.

[server]
# Host to bind the server to (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
host = "0.0.0.0"

# Port to listen on for HTTPS connections
port = 443

# Secret token that must be included in the phone home URL
# IMPORTANT: Change this to a secure, random value for production use!
token = "your-secret-token-here-change-me-123456"

[logging]
# Path to the log file
log_file = "/var/log/phonehome/phonehome.log"

# Log level: trace, debug, info, warn, error
log_level = "info"

# Enable console logging (stdout/stderr)
enable_console = true

# Enable file logging
enable_file = true

# Maximum log file size in MB before rotation (used by tracing-appender)
max_file_size_mb = 100

# Maximum number of rotated log files to keep
max_files = 10

[tls]
# Path to the TLS certificate file
# If the file doesn't exist, a self-signed certificate will be generated automatically
# Note: Self-signed certificates are stored in /var/lib/phonehome for better security
cert_path = "/var/lib/phonehome/cert.pem"

# Path to the TLS private key file
# If the file doesn't exist, a private key will be generated automatically
key_path = "/var/lib/phonehome/key.pem"

# For testing without TLS (HTTP mode), comment out the entire [tls] section:
# [tls]
# cert_path = "/var/lib/phonehome/cert.pem"
# key_path = "/var/lib/phonehome/key.pem"

[external_app]
# Command to execute when phone home data is received
# This could be a script, binary, or any executable command
command = "/usr/bin/process-phone-home"

# Arguments to pass to the command (the processed data string will be appended at the end)
args = ["--source", "cloud-init", "--format", "pipe-separated"]

# Timeout in seconds for the external application execution
timeout_seconds = 30

# Working directory for the external application (optional)
# working_directory = "/var/lib/phonehome"

# Environment variables to set for the external application (optional)
# [external_app.environment]
# API_KEY = "your-api-key"
# LOG_LEVEL = "info"

# Security Settings for External Application
# Maximum length of data that can be passed to external application (in bytes)
max_data_length = 4096

# Whether to allow control characters in the data (default: false for security)
allow_control_chars = false

# Whether to sanitize input data before passing to external application (default: true)
sanitize_input = true

# Whether to encapsulate the sanitized data argument in quotes (default: false)
# Set to true if your external application expects quoted arguments
quote_data = true

[phone_home]
# List of fields to extract from the Cloud Init phone home data
# Available fields include:
# - instance_id: Cloud instance identifier
# - hostname: System hostname
# - fqdn: Fully qualified domain name
# - cloud_name: Cloud provider name (aws, gce, azure, etc.)
# - platform: Platform information
# - region: Cloud region
# - availability_zone: Availability zone
# - instance_type: Instance type/size
# - local_hostname: Local hostname
# - public_keys: SSH public keys (comma-separated)
# - local_ipv4: Local IPv4 address
# - public_ipv4: Public IPv4 address
# - local_ipv6: Local IPv6 address
# - public_ipv6: Public IPv6 address
# - mac: MAC address
# - security_groups: Security groups (comma-separated)
# You can also specify custom fields that may be present in the phone home data
fields_to_extract = [
    "instance_id",
    "hostname",
    "fqdn",
    "public_ipv4",
    "local_ipv4",
    "cloud_name",
    "region",
    "availability_zone",
    "instance_type"
]

# Separator character to use between extracted fields
field_separator = "|"

# Whether to include a timestamp as the first field
include_timestamp = true

# Whether to include the instance_id as a separate field (even if not in fields_to_extract)
include_instance_id = true
